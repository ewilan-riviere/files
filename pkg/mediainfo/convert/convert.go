package convert

import "github.com/ewilan-riviere/scanner/pkg/mediainfo/types"

func ConvertGeneral(item *types.MediainfoItem, items []types.MediainfoOutputItem) {
	item.UniqueID = types.FilterItems("Unique ID", items)
	item.CompleteName = types.FilterItems("Complete name", items)
	item.Format = types.FilterItems("Format", items)
	item.FormatVersion = types.FilterItems("Format version", items)
	item.FileSize = types.FilterItems("File size", items)
	item.Duration = types.FilterItems("Duration", items)
	item.OverallBitRate = types.FilterItems("Overall bit rate", items)
	item.Album = types.FilterItems("Album", items)
	item.AlbumPerformer = types.FilterItems("Album/Performer", items)
	item.PartPosition = types.FilterItems("Part/Position", items)
	item.TrackName = types.FilterItems("Track name", items)
	item.TrackNamePosition = types.FilterItems("Track name/Position", items)
	item.Performer = types.FilterItems("Performer", items)
	item.Genre = types.FilterItems("Genre", items)
	item.RecordedDate = types.FilterItems("Recorded date", items)
	item.FrameRate = types.FilterItems("Frame rate", items)
	item.MovieName = types.FilterItems("Movie name", items)
	item.EncodedDate = types.FilterItems("Encoded date", items)
	item.WritingApplication = types.FilterItems("Writing application", items)
	item.WritingLibrary = types.FilterItems("Writing library", items)
	item.Cover = types.FilterItems("Cover", items)
	item.CoverType = types.FilterItems("Cover type", items)
	item.CoverMime = types.FilterItems("Cover MIME", items)
	item.Comment = types.FilterItems("Comment", items)
	item.Attachments = types.FilterItems("Attachments", items)
}

func ConvertVideo(item *types.MediainfoItemVideo, items []types.MediainfoOutputItem) {
	item.ID = types.FilterItems("ID", items)
	item.Format = types.FilterItems("Format", items)
	item.FormatInfo = types.FilterItems("Format/Info", items)
	item.FormatProfile = types.FilterItems("Format profile", items)
	item.FormatSettings = types.FilterItems("Format settings", items)
	item.FormatSettingsCABAC = types.FilterItems("Format settings, CABAC", items)
	item.FormatSettingsReferenceFrames = types.FilterItems("Format settings, RefFrames", items)
	item.CodecID = types.FilterItems("Codec ID", items)
	item.Duration = types.FilterItems("Duration", items)
	item.BitRate = types.FilterItems("Bit rate", items)
	item.Width = types.FilterItems("Width", items)
	item.Height = types.FilterItems("Height", items)
	item.DisplayAspectRatio = types.FilterItems("Display aspect ratio", items)
	item.FrameRateMode = types.FilterItems("Frame rate mode", items)
	item.FrameRate = types.FilterItems("Frame rate", items)
	item.ColorSpace = types.FilterItems("Color space", items)
	item.ChromaSubsampling = types.FilterItems("Chroma subsampling", items)
	item.BitDepth = types.FilterItems("Bit depth", items)
	item.ScanType = types.FilterItems("Scan type", items)
	item.BitsPixelFrame = types.FilterItems("Bits/(Pixel*Frame)", items)
	item.StreamSize = types.FilterItems("Stream size", items)
	item.Title = types.FilterItems("Title", items)
	item.WritingLibrary = types.FilterItems("Writing library", items)
	item.EncodingSettings = types.FilterItems("Encoding settings", items)
	item.Default = types.FilterItems("Default", items)
	item.Forced = types.FilterItems("Forced", items)
	item.ColorRange = types.FilterItems("Color range", items)
	item.ColorPrimaries = types.FilterItems("Color primaries", items)
	item.TransferCharacteristics = types.FilterItems("Transfer characteristics", items)
	item.MatrixCoefficients = types.FilterItems("Matrix coefficients", items)
}

func ConvertAudio(item *types.MediainfoItemAudio, items []types.MediainfoOutputItem) {
	item.ID = types.FilterItems("ID", items)
	item.Format = types.FilterItems("Format", items)
	item.FormatInfo = types.FilterItems("Format/Info", items)
	item.FormatProfile = types.FilterItems("Format profile", items)
	item.FormatVersion = types.FilterItems("Format version", items)
	item.WritingLibrary = types.FilterItems("Writing library", items)
	item.EncodingSettings = types.FilterItems("Encoding settings", items)
	item.CommercialName = types.FilterItems("Commercial name", items)
	item.CodecID = types.FilterItems("Codec ID", items)
	item.Duration = types.FilterItems("Duration", items)
	item.BitRateMode = types.FilterItems("Bit rate mode", items)
	item.BitRate = types.FilterItems("Bit rate", items)
	item.Channel = types.FilterItems("Channel(s)", items)
	item.ChannelLayout = types.FilterItems("Channel layout", items)
	item.SamplingRate = types.FilterItems("Sampling rate", items)
	item.FrameRate = types.FilterItems("Frame rate", items)
	item.Compression = types.FilterItems("Compression mode", items)
	item.StreamSize = types.FilterItems("Stream size", items)
	item.Title = types.FilterItems("Title", items)
	item.Language = types.FilterItems("Language", items)
	item.ServiceKind = types.FilterItems("Service kind", items)
	item.Default = types.FilterItems("Default", items)
	item.Forced = types.FilterItems("Forced", items)
}

func ConvertText(item *types.MediainfoItemText, items []types.MediainfoOutputItem) {
	item.ID = types.FilterItems("ID", items)
	item.Format = types.FilterItems("Format", items)
	item.CodecID = types.FilterItems("Codec ID", items)
	item.CodecIDInfo = types.FilterItems("Codec ID/Info", items)
	item.Duration = types.FilterItems("Duration", items)
	item.BitRate = types.FilterItems("Bit rate", items)
	item.FrameRate = types.FilterItems("Frame rate", items)
	item.CountOfElement = types.FilterItems("Count of elements", items)
	item.StreamSize = types.FilterItems("Stream size", items)
	item.Title = types.FilterItems("Title", items)
	item.Language = types.FilterItems("Language", items)
	item.Default = types.FilterItems("Default", items)
	item.Forced = types.FilterItems("Forced", items)
}

func ConvertImage(item *types.MediainfoItemImage, items []types.MediainfoOutputItem) {
	item.ID = types.FilterItems("ID", items)
	item.Format = types.FilterItems("Format", items)
	item.Width = types.FilterItems("Width", items)
	item.Height = types.FilterItems("Height", items)
	item.ColorSpace = types.FilterItems("Color space", items)
	item.ChromaSubsampling = types.FilterItems("Chroma subsampling", items)
	item.BitDepth = types.FilterItems("Bit depth", items)
	item.CompressionMode = types.FilterItems("Compression mode", items)
	item.StreamSize = types.FilterItems("Stream size", items)
}
